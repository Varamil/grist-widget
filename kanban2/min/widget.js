(function(a){typeof define=="function"&&define.amd?define(a):a()})(function(){"use strict";let a,l;const f=new Date("3000-01-01"),m="#DCDCDC",y="#000000";let C,g=[];window.addEventListener("load",async e=>{a=new WidgetSDK,l=await a.loadTranslations(["widget.js"]);const t=`If empty, the widget use the column properties (based on choices or references) to make the list. Else, you can either:
• Provides a list, separated by ";"
• Provides a reference to a table or a column starting with a "$" ($TableID or $TableID.ColumnID)`;a.configureOptions([WidgetSDK.newItem("columns",null,"Behavior","Configure the behavior of each columns","Columns",{columnId:"STATUT",template:[WidgetSDK.newItem("addbutton",!0,"Can add card","If checked, display a button to add card to the column."),WidgetSDK.newItem("isdone",!1,"Is done","If checked, cards in the columns are considered as over."),WidgetSDK.newItem("useconfetti",!1,"Use confetti","If checked, confetti apprear when a card enter in the column.")]}),WidgetSDK.newItem("ref","","References","List of task references available.","Cards options",{description:t,columnId:"REFERENCE_PROJET",type:"lookup"}),WidgetSDK.newItem("types","","Type","List of task types available.","Cards options",{description:t,columnId:"TYPE",type:"lookup"}),WidgetSDK.newItem("incharge","","In charge","List of people that can be in charge of the task.","Cards options",{description:t,columnId:"RESPONSABLE",type:"lookup"}),WidgetSDK.newItem("cardcolor","","Card color","List of color available for card background.","Cards options",{description:t,columnId:"COULEUR",type:"lookup"}),WidgetSDK.newItem("rotation",!0,"Tilt","If checked, cards are randomly tilted.","Display"),WidgetSDK.newItem("compact",!1,"Compact","If checked, use a compact rendering.","Display"),WidgetSDK.newItem("readonly",!1,"Read only","If checked, kanban is ready only.","Display")],"#config-view","#main-view",{onOptChange:v,onOptLoad:v}),a.initMetaData(),a.ready({requiredAccess:"full",columns:[{name:"STATUT",title:"Status",description:"Defines the Kanban column",type:"Choice",strictType:!0},{name:"DESCRIPTION",title:"Task",description:"Main card content",type:"Any"},{name:"DEADLINE",title:"Deadline",description:"Can also be use as priority",type:"Date"},{name:"REFERENCE_PROJET",title:"Reference",description:"Reference associated with the task",type:"Any",optional:!0},{name:"TYPE",title:"Type",description:"Type associated with the task",type:"Any",optional:!0},{name:"RESPONSABLE",title:"In charge",description:"Who is in charge",type:"Any",optional:!0},{name:"CREE_PAR",title:"Created by",type:"Any",optional:!0},{name:"CREE_LE",title:"Creation date",type:"DateTime",optional:!0},{name:"DERNIERE_MISE_A_JOUR",title:"Last update date",description:"Updated after any change",type:"DateTime",optional:!0},{name:"NOTES",title:"Notes",description:"Additional notes",type:"Any",optional:!0},{name:"COULEUR",title:"Card color",description:"Choice or html value",type:"Choice,Text",optional:!0},{name:"TAGS",title:"Tags",description:"Additional fields to display",type:"Any",optional:!0,allowMultiple:!0}]}),a.onRecords(S,{expandRefs:!1,keepEncoded:!1,mapRef:!0}),a.isLoaded().then(async()=>{a.initDone=!0}),grist.on("message",async n=>{n.mappingsChange&&$()})});async function S(e){C=e;const t=document.getElementById("conteneur-kanban");t.innerHTML="";const n=await a.col.STATUT.getChoices();if(!n||n.length===0){console.error(l("No choice available in the Status column"));return}n.forEach((o,i)=>{t.appendChild(D(o,i))}),e?.length>0&&(e.forEach(o=>{const i=L(o),r=document.querySelector(`.contenu-colonne[data-statut="${o.STATUT}"]`);r&&r.insertBefore(i,r.firstChild)}),a.opt.readonly||document.querySelectorAll(".contenu-colonne").forEach(o=>{new Sortable(o,{group:"kanban-todo",animation:150,onEnd:async function(i){const r=i.to.dataset.statut;if(r===i.from.dataset.statut){let s=i.item.dataset.deadline||"9999-12-31";if(i.oldIndex!==i.newIndex&&new Date(s)>=f){let u=f.getFullYear(),d=[];document.querySelectorAll(".contenu-colonne").forEach(c=>{c.getAttribute("data-statut")===r&&c.querySelectorAll(".carte").forEach(async p=>{s=p.getAttribute("data-deadline")||"9999-12-31",new Date(s)>=f&&(s=`${u}-01-01`,p.setAttribute("data-deadline",s),u+=1,d.push(a.formatRecord(p.getAttribute("data-todo-id"),{DEADLINE:s})))})});try{await a.updateRecords(d)}catch(c){console.error(l("Error during status update:"),c)}}}else try{await I(i.item.dataset.todoId,"STATUT",r)}catch(s){console.error(l("Error during status update:"),s)}b(o)}}),b(o)}),document.querySelectorAll(".colonne-kanban").forEach(O))}async function v(e){await a.isMapped(),S(C)}function D(e,t){const n=a.opt.columns[t],o=document.createElement("div");return o.className=`colonne-kanban ${n.addbutton?"":"colonne-nobouton"}`,o.id=e,localStorage.getItem(`column-todo-${e}`)==="true"&&o.classList.add("collapsed"),o.innerHTML=`
        <div class="entete-colonne" style="background-color: ${a.col.STATUT.getColor(e)??m};color:${a.col.STATUT.getTextColor(e)??y}">
            <div class="titre-statut">${e} <span class="compteur-colonne">(0)</span></div>
            ${n.addbutton&&!a.opt.readonly?`
            <button class="bouton-ajouter-entete ${a.opt.compact?" compact":""}" onclick="creerNouvelleTache('${e}')">+</button>
            `:""}
            <button class="bouton-toggle" onclick="toggleColonne(this.closest('.colonne-kanban'), event)">⇄</button>
        </div>
        ${n.addbutton&&!a.opt.readonly?`
            <button class="bouton-ajouter ${a.opt.compact?" compact":""}" onclick="creerNouvelleTache('${e}')">+ ${l("Add a new task")}</button>
        `:""}
        <div class="contenu-colonne" data-statut="${e}"></div>
    `,o}function $(){const e=document.getElementsByClassName("colonne-kanban");Array.prototype.forEach.call(e,t=>{t.style=`background-color: ${a.col.STATUT.getColor(t.id)??m};color:${a.col.STATUT.getTextColor(t.id)??y}`}),w()}async function w(){await a.isMapped(),g=[],a.map.TAGS&&(g=await a.map.TAGS.map(async e=>await(await a.meta.getColMeta(e))?.getChoices()??[]),g=await Promise.all(g))}function L(e){const t=document.createElement("div");t.className=`carte ${a.opt.rotation?"":" norotate"}${a.opt.compact?" compact":""}`,t.setAttribute("data-todo-id",e.id),t.setAttribute("data-last-update",e.DERNIERE_MISE_A_JOUR||""),t.setAttribute("data-deadline",e.DEADLINE||""),e.COULEUR&&a.col.COULEUR.type==="Choice"&&(a.col.COULEUR.getColor(e.COULEUR)?t.setAttribute("style",`background-color: ${a.col.COULEUR.getColor(e.COULEUR)}`):t.setAttribute("style",`background-color: ${(e.COULEUR.startsWith("#")?"":"#")+e.COULEUR}`));const n=e.TYPE||"",o=e.DESCRIPTION||l("No description"),i=e.DEADLINE?A(e.DEADLINE):"",r=e.RESPONSABLE||"",s=e.REFERENCE_PROJET,u=e.TAGS||[];let d="";u.forEach(p=>d+=p?`<div class="more-tag">${p}</div>`:"");const c=a.getValueListOption("columns",e.STATUT);return t.innerHTML=`
        ${s&&s.length>0?`<div class="projet-ref truncate">#${s}</div>`:""}
        ${n?`<div class="type-tag truncate">${n}</div>`:s&&s.length>0?"<div>&nbsp;</div>":""}
        ${u.length>0?`<div>${d}</div>`:""}
        <div class="description">${o}</div>
        ${i?`<div class="deadline${e.DEADLINE<Date.now()?" late":""} truncate">📅 ${i}</div>`:r?"<div>&nbsp;</div>":""}
        ${r?`<div class="responsable-badge truncate">${r}</div>`:""}
        ${c?.isdone?`<div class="tampon-termine" style="color: ${a.col.STATUT.getColor(e.STATUT)??m};">${e.STATUT}</div>`:""}      
    `,t.addEventListener("click",()=>R(e)),t}async function I(e,t,n,o){try{if(o?.stopPropagation(),t==="STATUT"){const r=a.getValueListOption("columns",n);r&&r.useconfetti&&k()}let i={[t]:n||void 0};a.map.DERNIERE_MISE_A_JOUR&&(i.DERNIERE_MISE_A_JOUR=new Date().toISOString()),await a.updateRecords(a.formatRecord(e,i))}catch(i){console.error(l("Error during update:"),i)}}function b(e){const t=Array.from(e.children),n=e.dataset.isdone;t.sort((o,i)=>{if(n){const r=o.getAttribute("data-last-update")||"1970-01-01",s=i.getAttribute("data-last-update")||"1970-01-01",u=new Date(s)-new Date(r);if(u===0){const d=parseInt(o.getAttribute("data-todo-id"))||0,c=parseInt(i.getAttribute("data-todo-id"))||0;return d-c}else return u}else{const r=o.getAttribute("data-deadline")||"9999-12-31",s=i.getAttribute("data-deadline")||"9999-12-31",u=new Date(r)-new Date(s);if(u===0){const d=parseInt(o.getAttribute("data-todo-id"))||0,c=parseInt(i.getAttribute("data-todo-id"))||0;return d-c}else return u}}),t.forEach(o=>e.appendChild(o))}function O(e){const t=e.querySelector(".contenu-colonne"),n=e.querySelector(".compteur-colonne");t&&n&&(n.textContent=`(${t.children.length})`)}function R(e){const t=document.getElementById("popup-todo"),n=document.querySelector(".carte.active"),o=document.querySelector(`[data-todo-id="${e.id}"]`),i=a.getValueListOption("columns",e.STATUT);if(a.opt.readonly){h();return}n?.classList.remove("active"),o?.classList.add("active"),t.style=`border-left-color: ${a.col.STATUT.getColor(e.STATUT)??m}`,t.dataset.statut=e.STATUT,t.dataset.isdone=i?!1:i.isdone,t.dataset.currentTodo=e.id;const r=t.querySelector(".popup-title"),s=t.querySelector(".popup-content"),u=t.querySelector(".popup-header");u.style=`background-color: ${a.col.STATUT.getColor(e.STATUT)??m};color:${a.col.STATUT.getTextColor(e.STATUT)??y}`,r.textContent=e.DESCRIPTION||l("New task");let d=1,c='<div class="field-row">';c+=`
        <div class="field">
          <label class="field-label">${l("Deadline")}</label>
          <input type="date" class="field-input" 
                 value="${P(e.DEADLINE)}"
                 onchange="mettreAJourChamp(${e.id}, 'DEADLINE', this.value, event)">
        </div>
    `,a.map.REFERENCE_PROJET&&(c+=T(e.id,e.REFERENCE_PROJET,a.valuesList.ref,l("Reference"),"REFERENCE_PROJET"),d+=1),d%2===0&&(c+='</div><div class="field-row">'),a.map.TYPE&&(c+=T(e.id,e.TYPE,a.valuesList.types,l("Type"),"TYPE"),d+=1),d%2===0&&(c+='</div><div class="field-row">'),a.map.RESPONSABLE&&(c+=T(e.id,e.RESPONSABLE,a.valuesList.incharge,l("In charge"),"RESPONSABLE"),d+=1),d%2===0&&(c+='</div><div class="field-row">'),a.map.TAGS&&a.map.TAGS.forEach((p,E)=>{c+=T(e.id,e.TAGS[E],g[E],p,p),d+=1,d%2===0&&(c+='</div><div class="field-row">')}),a.map.COULEUR&&(c+=T(e.id,e.COULEUR,a.valuesList.cardcolor,l("Card color"),"COULEUR"),d+=1),c+=`</div>
        <div class="field">
            <label class="field-label">${l("Description")}</label>
            <textarea class="field-textarea auto-expand" 
                    onchange="mettreAJourChamp(${e.id}, 'DESCRIPTION', this.value, event)"
                    oninput="this.style.height = ''; this.style.height = this.scrollHeight + 'px'">${e.DESCRIPTION||""}</textarea>
        </div>
    `,a.map.NOTES&&(c+=`<div class="field">
            <label class="field-label">${l("Notes")}</label>
            <textarea class="field-textarea auto-expand" 
                      onchange="mettreAJourChamp(${e.id}, 'NOTES', this.value, event)"
                      oninput="this.style.height = ''; this.style.height = this.scrollHeight + 'px'">${e.NOTES||""}</textarea>
          </div>
        `),(a.map.CREE_LE&&e.CREE_LE||a.map.CREE_PAR&&e.CREE_PAR||a.map.DERNIERE_MISE_A_JOUR&&e.DERNIERE_MISE_A_JOUR)&&(c+=`<div class="info-creation">
                ${l("Created")} ${a.map.CREE_LE&&e.CREE_LE?l("on %on",{on:A(e.CREE_LE)}):""} 
                ${a.map.CREE_PAR&&e.CREE_PAR?l("by %by",{by:e.CREE_PAR||"-"}):""}
                ${a.map.DERNIERE_MISE_A_JOUR&&e.DERNIERE_MISE_A_JOUR?"<br>"+l("Last update on %on",{on:A(e.DERNIERE_MISE_A_JOUR)||"-"}):""}
            </div>
        `),a.opt.readonly||(c+=` 
          <div class="popup-actions">
            <button class="popup-action-button bouton-supprimer" onclick="supprimerTodo(${e.id}, event)" 
                    title="${l("Remove the task")}">🗑️</button>
          </div>
        `),s.innerHTML=c,setTimeout(()=>{document.querySelectorAll(".auto-expand").forEach(E=>{E.style.height="",E.style.height=E.scrollHeight+"px"})},0),t.classList.add("visible")}function T(e,t,n,o,i){let r="";return n?.length>0?n.length<10?(r+=`
                <div class="field">
                    <label class="field-label">${o}</label>
                    <select class="field-select" onchange="mettreAJourChamp(${e}, '${i}', this.value, event)">
                    <option value=""></option>`,n.forEach(s=>{r+=`<option value="${s}" ${t===s?"selected":""}>${s}</option>`}),r+=`</select>
                </div>        
            `):(r+=`
                <div class="field">
                    <label class="field-label">${o}</label>
                    <input type="text" list="list-${i}" class="field-select" onchange="mettreAJourChamp(${e}, '${i}', this.value, event)" />
                    <datalist id="list-${i}">`,n.forEach(s=>{r+=`<option value="${s}" ${t===s?"selected":""}>${s}</option>`}),r+=`</datalist>
                </div>        
            `):r+=`
            <div class="field">
                <label class="field-label">${o}</label>
                <input type="text" class="field-input" value="${t||""}" 
                    onchange="mettreAJourChamp(${e}, '${i}', this.value, event)">
            </div>
        `,r}function h(){const e=document.getElementById("popup-todo"),t=e.dataset.currentTodo,n=document.querySelector(`[data-todo-id="${t}"]`);n&&n.classList.remove("active"),e.classList.remove("visible")}document.addEventListener("keydown",e=>{e.key==="Escape"&&h()}),document.addEventListener("click",e=>{const t=document.getElementById("popup-todo");t.classList.contains("visible")&&!t.querySelector(".popup-content").contains(e.target)&&!e.target.closest(".carte")&&!e.target.closest(".popup-header")&&h()});async function U(e){try{let t={DESCRIPTION:"",STATUT:e};a.map.TYPE&&(t.TYPE=""),a.map.REFERENCE_PROJET&&(t.REFERENCE_PROJET=null),a.map.DERNIERE_MISE_A_JOUR&&(t.DERNIERE_MISE_A_JOUR=new Date().toISOString()),a.map.CREE_LE&&(t.CREE_LE=new Date().toISOString());const n=await a.createRecords({fields:t});if(n.id&&n.id>0){const o=await a.fetchSelectedRecord(n.id);R(o)}}catch(t){console.error(l("Error on creation:"),t)}}async function _(e,t){if(t?.stopPropagation(),confirm(l("Are you sure you want to delete this task?")))try{await a.destroyRecords(e),h()}catch(n){console.error(l("Error on delete:"),n)}}function N(e,t){t?.stopPropagation(),e.classList.toggle("collapsed"),localStorage.setItem(`column-todo-${e.querySelector(".titre-statut").textContent.trim()}`,e.classList.contains("collapsed"))}function k(){const t=Date.now()+2e3,n={startVelocity:30,spread:360,ticks:60,zIndex:0};function o(r,s){return Math.random()*(s-r)+r}const i=setInterval(function(){const r=t-Date.now();if(r<=0)return clearInterval(i);const s=50*(r/2e3);confetti(Object.assign({},n,{particleCount:s,origin:{x:o(.1,.3),y:Math.random()-.2}})),confetti(Object.assign({},n,{particleCount:s,origin:{x:o(.7,.9),y:Math.random()-.2}}))},250)}function A(e){if(!e)return"-";const t=new Date(e);if(t>=f)return null;const n=t.getDate().toString().padStart(2,"0"),o=t.toLocaleDateString(a.cultureFull,{month:"short"}),i=t.getFullYear();return`${n} ${o} ${i}`}function P(e){if(!e)return"";try{const t=new Date(e);return t>=f?"":t.toISOString().split("T")[0]}catch(t){return console.error(l("Error on date formating:"),t),""}}window.toggleColonne=N,window.togglePopupTodo=R,window.fermerPopup=h,window.mettreAJourChamp=I,window.creerNouvelleTache=U,window.supprimerTodo=_});
